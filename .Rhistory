ad2extra$CPC <- as.character(ad2extra$CPC)
View(ad2extra)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
writeDoc(mydoc, "~/Desktop/Paid Search.pptx")
runApp('/Volumes/Front/Adam/Shiny8/scripts')
writeDoc(mydoc, "~/Desktop/Paid Search.pptx")
ad2extra$Prev_Impressions
ad2extra$Impressions
ad2extra$Phoneimpressions
ad2extra$Prev_Phone_Impressions
ad2extra$Clicks
ad2extra$Prev_Clicks
ad2extra$CPC
View(ad2extra)
test <- get_Adwords_data_for_powerpoint(ps_start,ps_end,ps_campaign_id[i],customer_id[i], select = "AverageCpc")
View(test)
test <- pptx("~/Desktop/Co-op_template.pptx")
test <- test %>%
addSlide(slide.layout = "New Paid Search") %>%
addParagraph(ifelse(length(ps_campaign_id)>1,p$custom_string,ps_campaign_name)) %>%
addParagraph(as.character(comma(digits = 0,ad2$Impressions))) %>%
addParagraph(as.character(comma(digits = 0,ad2$Phoneimpressions))) %>%
addParagraph(as.character(comma(digits = 0,ad2$Clicks))) %>%
addParagraph(ad2$CPC) %>%
addParagraph(as.character(comma(digits = 0,total_ps))) %>%
addParagraph(conv_rate) %>%
addParagraph(formatted_bottom_time_range) %>%
addParagraph(paste0(as.character(comma(digits = 0, ad2$Prev_Impressions)), " prior year")) %>%
addParagraph(paste0(as.character(comma(digits = 0, ad2$Prev_Phone_Impressions)), " prior year")) %>%
addParagraph(paste0(as.character(comma(digits = 0, ad2$Prev_Click)), " prior year")) %>%
addParagraph(paste0(ad2$Prev_CPC, " prior year")) %>%
addParagraph(paste0(as.character(comma(digits = 0, prev_total_ps)), " prior year")) %>%
addParagraph(paste0(prev_conv_rate, " prior year"))
writeDoc(test, "~/Desktop/Paid Search.pptx")
mydoc <- pptx("~/Desktop/Co-op_template.pptx")
total_ps = sum(leads.df1[leads.df1$SentTo %in% whichDeals,grepl("paid",colnames(leads.df1),ignore.case = T)])
prev_total_ps = sum(leads.df2[leads.df2$SentTo %in% whichDeals, grepl("paid", colnames(leads.df2), ignore.case = T)])
}
conv_rate = paste0(round(total_ps / ad2extra$Clicks * 100,1),"%")
prev_conv_rate = paste0(round(prev_total_ps / as.numeric(unlist(ad2extra$Prev_Clicks)) * 100, 1), "%")
mydoc=addSlide(mydoc,slide.layout = "New Paid Search")
mydoc = addParagraph(mydoc,ps_campaign_name[i])
mydoc = addParagraph(mydoc,as.character(comma(digits = 0,ad2extra$Impressions)))
mydoc = addParagraph(mydoc,as.character(comma(digits = 0,ad2extra$Phoneimpressions)))
mydoc = addParagraph(mydoc,as.character(comma(digits = 0,ad2extra$Clicks)))
mydoc = addParagraph(mydoc,ad2extra$CPC)
mydoc = addParagraph(mydoc,as.character(comma(digits = 0,total_ps)))
mydoc = addParagraph(mydoc,as.character(conv_rate))
mydoc = addParagraph(mydoc,formatted_bottom_time_range)
# browser()
mydoc <- mydoc %>%
addParagraph(paste0(comma(digits = 0, ad2extra$Prev_Impressions), " prior year")) %>%
addParagraph(paste0(comma(digits = 0, ad2extra$Prev_Phone_Impressions), " prior year")) %>%
addParagraph(paste0(comma(digits = 0, ad2extra$Prev_Click), " prior year")) %>%
addParagraph(paste0(ad2extra$Prev_CPC, " prior year")) %>%
addParagraph(paste0(as.character(comma(digits = 0, prev_total_ps)), " prior year")) %>%
addParagraph(paste0(prev_conv_rate, " prior year"))
writeDoc(mydoc, "~/Desktop/Paid Search.pptx")
ad2extra
View(ad2extra)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
View(ad2)
adextra <- get_Adwords_data_for_powerpoint(ps_start,ps_end,ps_campaign_id[i],customer_id[i])
test1 <- get_Adwords_data_for_powerpoint(ps_start,ps_end,ps_campaign_id[1],customer_id[1])
View(test1)
test2 <- get_Adwords_data_for_powerpoint(ps_start,ps_end,ps_campaign_id[2],customer_id[2])
View(test2)
test3 <- get_Adwords_data_for_powerpoint(ps_start,ps_end,ps_campaign_id[3],customer_id[3])
View(test3)
test4 <- get_Adwords_data_for_powerpoint(ps_start,ps_end,ps_campaign_id[4],customer_id[4])
View(test4)
for(i in 1:length(ps_campaign_id)){
# browser()
adextra <- get_Adwords_data_for_powerpoint(ps_start,ps_end,ps_campaign_id[i],customer_id[i])}
View(adextra)
View(adextra)
ad2extra$CPC
adextra$CPC
runApp('/Volumes/Front/Adam/Shiny8/scripts')
View(ad2extra)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
writeDoc(mydoc, "~/Desktop/Paid Search.pptx")
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
View(dd)
class(dd$`Phone..Paid Search`)
class(dd$`Forms..Paid Search`)
class(dd$Phone..Web)
class(dd$Forms..Web)
class(dd$Forms..)
class(dd$`Phone..Direct Mail`)
class(dd$`Phone..Direct Transfer Web`)
class(dd$Phone..Total)
class(dd$Forms..Total)
class(dd$Grand..Total)
shiny::runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
View(new_rv)
View(new_rv$leads_df)
write.csv(new_rv$leads_df, "~/Desktop/fond leads.csv")
write.csv(new_rv$leads_df, "~/Desktop/fond leads.csv", row.names = F)
write.csv(new_rv$compare_leads_df, "~/Desktop/fond comp leads.csv", row.names = F)
leads <- read.csv("~/Desktop/fond leads.csv")
compare <- read.csv("~/Desktop/fond comp leads.csv")
make_single_lead_table <- function(dd,dd2){
combine_phone_forms <- function(df,year){
msources <- names(df)[3:(length(names(df)) - 3)]
split_msources <- strsplit(msources,"..",fixed = T)
ms <- sapply(split_msources,function(x) x[2],USE.NAMES = F)
uni_ms <- unique(ms)
new_d <- data.frame(Year = year,data.frame(sapply(uni_ms,list)),Total = df$Grand..Total,stringsAsFactors = F)
names(new_d)[2:(length(names(new_d))-1)] <- uni_ms
# browser()
for (i in 1:length(uni_ms)){
new_d[uni_ms[i]] <- sum(df[,which(ms == uni_ms[i]) + 2])
}
new_d
not_na_column <- function(x) any(!is.na(x))
new_d <- new_d %>%
select_if(not_na_column)
}
dd1 <- combine_phone_forms(dd,"Current")
dd2 <- combine_phone_forms(dd2,"Prior")
new_rv$lead_change <- round((dd1$Total - dd2$Total) / dd2$Total*100,digits=1)
comb <- smartbind(dd1,dd2)
comb[is.na(comb)] <- 0
if(names(comb)[ncol(comb)]!="Total"){
temp <- comb$Total
comb <- comb[,-which(names(comb) == "Total")]
comb$Total <- temp
}
text_size <- 13
lead_table <- FlexTable(comb,body.text.props = textProperties(font.size = text_size,font.family = "Arial"),header.columns = F)
header_text <- paste0(gsub("Culligan of ([A-Za-z0-9 /\\.':&]+) \\(.*$","\\1",unique(dd$SentTo))," Local Inquiries")
lead_table <- addHeaderRow(lead_table,text.properties =textProperties(color="white",font.weight = "bold",font.size = text_size+2,font.family = "Arial"),value=header_text,colspan = length(names(comb)),cell.properties =cellProperties(background.color = "#0A3C6E"))
lead_table <- addHeaderRow(lead_table,value=names(comb),text.properties = textProperties(font.size = text_size,font.family = "Arial",font.weight = "bold"))
lead_table <- setFlexTableBorders(lead_table,inner.vertical = borderNone(),inner.horizontal = borderNone(),outer.horizontal = borderNone(),outer.vertical = borderNone())
#     lead_table <- setFlexTableBackgroundColors(lead_table, i=1:nrow(joined_dd),colors="#eaeaea", to = "body" )
lead_table <- setFlexTableBackgroundColors(lead_table, i=2,colors="#bebebe", to = "header" )
# lead_table <- setFlexTableWidths(lead_table,widths = c(1.7,.7,.7,ifelse(text_size==13,.8,.7)))
lead_table[,1] <- parProperties(text.align = "left")
lead_table[,2:ncol(comb)]<- parProperties(text.align = "right")
lead_table[,1,to="header"] <- parProperties(text.align = "left")
lead_table[,2:ncol(comb),to="header"]<- parProperties(text.align = "right")
lead_table[1,,to="header"]<- parProperties(text.align = "center")
lead_table
}
make_single_lead_table(leads, compare)
test <- make_single_lead_table(leads, compare)
View(test)
neat <- make_single_lead_table(leads, compare)
View(neat)
View(leads)
View(compare)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
View(dd)
View(dd2)
dd1 <- combine_phone_forms(dd,"Current")
dd2 <- combine_phone_forms(dd2,"Prior")
View(dd1)
dd2 <- combine_phone_forms(dd2,"Prior")
View(dd2)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
dd2 <- combine_phone_forms(dd2,"Prior")
View(dd2)
View(dd1)
dd1 <- combine_phone_forms(dd,"Current")
View(dd1)
View(dd)
class(dd$`Phone..Paid Search`)
class(dd$`Forms..Paid Search`)
class(dd$Phone..Web)
class(dd$Forms..Web)
class(dd$Forms..)
class(dd$`Phone..Direct Mail`)
class(dd$`Phone..Direct Transfer Web`)
class(dd$Phone..Total)
class(dd$Forms..Total)
class(dd$Grand..Total)
testsources <- names(dd)[3:(length(names(dd)) - 3)]
View(testsources)
splittest <- strsplit(testsources,"..",fixed = T)
View(splittest)
character(2)
ts <- sapply(splittest,function(x) x[2],USE.NAMES = F)
View(ts)
uni_ts <- unique(ts)
View(uni_ts)
not_na_column <- function(x) any(!is.na(x))
uni_ms <- uni_ms %>%
select_if(not_na_column)
View(uni_ms)
msources <- names(df)[3:(length(names(df)) - 3)]
split_msources <- strsplit(msources,"..",fixed = T)
ms <- sapply(split_msources,function(x) x[2],USE.NAMES = F)
uni_ms <- unique(ms)
not_na_column <- function(x) any(!is.na(x))
uni_ms <- uni_ms %>%
select_if(not_na_column)
msources <- names(df)[3:(length(names(df)) - 3)]
split_msources <- strsplit(msources,"..",fixed = T)
ms <- sapply(split_msources,function(x) x[2],USE.NAMES = F)
uni_ms <- unique(ms)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
dd1 <- combine_phone_forms(dd,"Current")
View(dd1)
dd2 <- combine_phone_forms(dd2,"Prior")
View(dd2)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
msources <- names(df)[3:(length(names(df)) - 3)]
msources
split_msources <- strsplit(msources,"..",fixed = T)
split_msources
ms <- sapply(split_msources,function(x) x[2],USE.NAMES = F)
ms
uni_ms <- unique(ms)
uni_ms
# not_na_column <- function(x) any(!is.na(x))
# uni_ms <- uni_ms %>%
#   select_if(not_na_column)
new_d <- data.frame(Year = year,data.frame(sapply(uni_ms,list)),Total = df$Grand..Total,stringsAsFactors = F)
new_d
not_na_column <- function(x) any(!is.na(x))
new_d <- new_d %>%
select_if(not_na_column)
new_d
names(new_d)[2:(length(names(new_d))-1)] <- uni_ms
uni_ms
uni_ms <- uni_ms %>%
select_if(not_na_column())
uni_ms
uni_ms <- uni_ms %>%
select_if(not_na_column)
uni_ms
class(uni_ms)
uni_ms <- uni_ms %>%
select_if(-"")
uni_ms
is.list(uni_ms)
is.data.frame(uni_ms)
is.vector(uni_ms)
uni_ms <- !is.na(uni_ms)
uni_ms
runApp('/Volumes/Front/Adam/Shiny8/scripts')
dd1 <- combine_phone_forms(dd,"Current")
View(dd1)
dd2 <- combine_phone_forms(dd2,"Prior")
View(dd2)
dd1 <- combine_phone_forms(dd,"Current")
not_na_column <- function(x) any(!is.na(x))
dd1 <- dd1 %>%
select_if(not_na_column)
View(dd1)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
table$`Grand Total`[index]
upOrDown(table$`Grand Total`[index])
upOrDown(table$`Forms Paid Search`[index] )
upOrDown(new_web)
new_web_change
table$`Forms Web`[index - 1]
table$`Phone Direct Transfer Web`[index - 1]
View(table)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
data_table$Bounce.Rate <- gsub("\\%", "", data_table$Bounce.Rate)
data_table <- read.csv(file_to_read$datapath, skip = input$bounce_lines)
data_table <- data_table %>%
select(Service.Provider, Date.Range, Sessions, Bounce.Rate)
data_table$Bounce.Rate <- gsub("\\%", "", data_table$Bounce.Rate)
data_table$Bounce.Rate <- as.numeric(data_table$Bounce.Rate)
View(data_table)
Q
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
data_table_2017 <- data_table %>%
filter(!str_detect(Date.Range, input$bounce_year))
data_table_2018 <- data_table %>%
filter(str_detect(Date.Range, input$bounce_year))
combined_data_table <- left_join(data_table_2017, data_table_2018, by = "Service.Provider")
data_table_2017 <- data_table %>%
filter(!str_detect(Date.Range, as.character(input$bounce_year)))
data_table_2017 <- data_table %>%
filter(!str_detect(Date.Range, as.character(input$bounce_year)))
data_table_2018 <- data_table %>%
filter(str_detect(Date.Range, as.character(input$bounce_year)))
combined_data_table <- left_join(data_table_2017, data_table_2018, by = "Service.Provider")
View(combined_data_table)
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y)
View(combined_data_table)
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y) %>%
filter(prior_sessions > 3 & current_sessions > 3)
View(combined_data_table)
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y) %>%
filter(prior_sessions > 3 | current_sessions > 3)
View(combined_data_table)
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y) %>%
filter(prior_sessions > 3 | current_sessions > 3) %>%
arrange(-current_sessions)
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y) %>%
filter(prior_sessions > 3 | current_sessions > 3) %>%
arrange(-current_sessions) %>%
filter(prior_bounce_rate > 90 | current_bounce_rate > 90)
View(combined_data_table)
combined_data_table <- left_join(data_table_2017, data_table_2018, by = "Service.Provider")
View(combined_data_table)
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y) %>%
filter(prior_sessions > 3 | current_sessions > 3) %>%
arrange(-current_sessions) %>%
filter(prior_bounce_rate > 90 | current_bounce_rate > 90)
data_table <- read.csv(file_to_read$datapath, skip = input$bounce_lines)
data_table <- data_table %>%
select(Service.Provider, Date.Range, Sessions, Bounce.Rate) %>%
filter(Service.Provider != "(not set)")
data_table$Bounce.Rate <- gsub("\\%", "", data_table$Bounce.Rate)
data_table$Bounce.Rate <- as.numeric(data_table$Bounce.Rate)
data_table$Sessions <- as.numeric(data_table$Bounce.Rate)
data_table_2017 <- data_table %>%
filter(!str_detect(Date.Range, as.character(input$bounce_year)))
data_table_2018 <- data_table %>%
filter(str_detect(Date.Range, as.character(input$bounce_year)))
combined_data_table <- left_join(data_table_2017, data_table_2018, by = "Service.Provider")
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y) %>%
filter(prior_sessions > 3 | current_sessions > 3) %>%
arrange(-current_sessions) %>%
filter(prior_bounce_rate > 90 | current_bounce_rate > 90)
View(combined_data_table)
data_table <- read.csv(file_to_read$datapath, skip = input$bounce_lines)
data_table <- data_table %>%
select(Service.Provider, Date.Range, Sessions, Bounce.Rate) %>%
filter(Service.Provider != "(not set)")
data_table$Bounce.Rate <- gsub("\\%", "", data_table$Bounce.Rate)
data_table$Bounce.Rate <- as.numeric(data_table$Bounce.Rate)
data_table$Sessions <- as.integer(data_table$Sessions)
data_table_2017 <- data_table %>%
filter(!str_detect(Date.Range, as.character(input$bounce_year)))
data_table_2018 <- data_table %>%
filter(str_detect(Date.Range, as.character(input$bounce_year)))
combined_data_table <- left_join(data_table_2017, data_table_2018, by = "Service.Provider")
combined_data_table <- combined_data_table %>%
select(Service.Provider, Sessions.x, Bounce.Rate.x, Sessions.y, Bounce.Rate.y) %>%
rename("prior_sessions" = Sessions.x, "prior_bounce_rate" = Bounce.Rate.x, "current_sessions" = Sessions.y,
"current_bounce_rate" = Bounce.Rate.y) %>%
filter(prior_sessions > 3 | current_sessions > 3) %>%
arrange(-current_sessions) %>%
filter(prior_bounce_rate > 90 | current_bounce_rate > 90)
# browser()
View(combined_data_table)
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
shiny::runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
View(Adwords_data_conversions)
ifelse(Adwords_data_conversions$conv_rate > 100, 100, Adwords_data_conversions$conv_rate)
Adwords_data_conversions$conv_rate <- ifelse(Adwords_data_conversions$conv_rate > 100, 100, Adwords_data_conversions$conv_rate)
View(Adwords_data_conversions)
runApp('/Volumes/Front/Adam/Shiny8/scripts')
?dataTableOutput
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
shiny::runApp('/Volumes/Front/Adam/Shiny8/scripts')
?writeData
# install.packages("googlesheets")
library(googlesheets)
gs_ls()
gs_new(title = "mtcars", ws_title = "first_sheet", input = mtcars)
mtcars_sheet <- gs_new(title = "mtcars", ws_title = "first_sheet", input = mtcars)
library(dplyr)
mtcars_sheet <- mtcars_sheet %>%
gs_edit_cells(ws = "first_sheet", anchor = "L2", input = rownames(mtcars), byrow = F)
library(shinyWidgets)
library(shiny); runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
input$gsheet_name
input$worksheet_first_name
View(data_table)
paid_search <- read.csv("~/Desktop/Paid Search Lead.csv")
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
mtcars_sheet <- gs_new(title = "test", ws_title = "first_sheet", input = paid_search)
class(mtcars)
class(paid_search)
View(mtcars)
View(paid_search)
paid_search <- paid_search[c(1,2,3,4,5),c(1,2,3,4,5)]
View(paid_search)
mtcars_sheet <- gs_new(title = "test2", ws_title = "first_sheet", input = paid_search)
mtcars_sheet <- gs_new(title = "test3", ws_title = "first_sheet", input = paid_search, col_extent = 100)
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
mtcars_sheet <- gs_new(title = "test3", ws_title = "first_sheet", input = paid_search, col_extent = 100)
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
paid_search <- paid_search[c(1,2,3,4,5),c(1,2,3,4,5)]
mtcars_sheet <- gs_new(title = "test3", ws_title = "first_sheet", input = paid_search, col_extent = ncol(paid_search),
row_extent = nrow(paid_search))
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
mtcars_sheet <- gs_new(title = "paid test", ws_title = "first_sheet", input = paid_search,
col_extent = ncol(paid_search),
row_extent = nrow(paid_search))
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
paid_search <- paid_search[1:5, 1:5]
mtcars_sheet <- gs_new(title = "paid test", ws_title = "first_sheet", input = paid_search,
col_extent = ncol(paid_search),
row_extent = nrow(paid_search))
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
paid_search <- paid_search[1:10, 1:10]
mtcars_sheet <- gs_new(title = "paid test", ws_title = "first_sheet", input = paid_search,
col_extent = ncol(paid_search),
row_extent = nrow(paid_search))
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
paid_search <- paid_search[1:20, 1:20]
mtcars_sheet <- gs_new(title = "paid test", ws_title = "first_sheet", input = paid_search,
col_extent = ncol(paid_search),
row_extent = nrow(paid_search))
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
paid_search <- paid_search[1:100, 1:26]
mtcars_sheet <- gs_new(title = "paid test", ws_title = "first_sheet", input = paid_search,
col_extent = ncol(paid_search),
row_extent = nrow(paid_search))
paid_search <- read.csv("~/Desktop/Paid Search Leads.csv")
mtcars_sheet <- gs_new(title = "paid test", ws_title = "first_sheet", input = paid_search,
col_extent = ncol(paid_search),
row_extent = nrow(paid_search))
runApp('Desktop/Rob Scripts/Current Projects/The App Which Shall Not Be Named.R')
library(shiny); runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
View(data_table)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
View(data_table)
data_table <- data_table %>%
select(PAR.Name, Dealer, FSA.ZIP.Code, Percentage.of.FSA.ZIP)
runApp('The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
class(data_table$Dealer)
class(input$corpID)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
data_table
Q
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
input$corp_dealer
test <- ifelse(input$corp_dealer != "", paste0(input$corp_dealer, " Corporate Zipcodes.csv"), "Corporate Zipcodes.csv")
test
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
