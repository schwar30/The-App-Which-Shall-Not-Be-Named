statement = body,
transformation = T)
noquote("784908139129-oj5f1n6rfj7b0nduvjgqrmsebp8r3u1d.apps.googleusercontent.com")
# %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>%
#
# install.packages("adwordsR")
# library(adwordsR)
#
credentials <- function(){
loadAdwordsToken()
noquote("784908139129-oj5f1n6rfj7b0nduvjgqrmsebp8r3u1d.apps.googleusercontent.com")
noquote("UqEGclCpJ8MJuTY-gJnZ3WXB")
noquote("MjoTlHKxml_KFr3r7fqj9w")
}
getReportData(reportType = "ACCOUNT_PERFORMANCE_REPORT",
startDate = "2018-01-01",
endDate = "2018-01-03",
clientCustomerId = "347-676-4982",
credentials = credentials(),
metrics = "Clicks")
# %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>% %>%
#
# install.packages("adwordsR")
library(adwordsR)
#
credentials <- function(){
loadAdwordsToken()
noquote("784908139129-oj5f1n6rfj7b0nduvjgqrmsebp8r3u1d.apps.googleusercontent.com")
noquote("UqEGclCpJ8MJuTY-gJnZ3WXB")
noquote("MjoTlHKxml_KFr3r7fqj9w")
}
getReportData(reportType = "ACCOUNT_PERFORMANCE_REPORT",
startDate = "2018-01-01",
endDate = "2018-01-03",
clientCustomerId = "347-676-4982",
credentials = credentials(),
metrics = "Clicks")
noquote
#
credentials <- function(){
loadAdwordsToken()
noquote("784908139129-oj5f1n6rfj7b0nduvjgqrmsebp8r3u1d.apps.googleusercontent.com")
noquote("ddd23355c611cd7e009f402e9c7700158b2c9772")
noquote("MjoTlHKxml_KFr3r7fqj9w")
}
getReportData(reportType = "ACCOUNT_PERFORMANCE_REPORT",
startDate = "2018-01-01",
endDate = "2018-01-03",
clientCustomerId = "347-676-4982",
credentials = credentials(),
metrics = "Clicks")
View(doAuth())
doAuth
doAuth()[["credentials"]][["c.id"]] <-"784908139129-oj5f1n6rfj7b0nduvjgqrmsebp8r3u1d.apps.googleusercontent.com"
doAuth()[["access"]][["access_token"]] <- "ya29.Glt9BZHNh7B-bm8ASxLoFV8kBBecdsNC8lU2kaBUTPT77Y8zY2bNB1Bh3urbARaKejyKR3XHlfbuUdZpQ0m6m9f81AIcHU13d0L4phvMioYTM51Z2CYZhSz0o1Ak"
"ya29.Glt9BZHNh7B-bm8ASxLoFV8kBBecdsNC8lU2kaBUTPT77Y8zY2bNB1Bh3urbARaKejyKR3XHlfbuUdZpQ0m6m9f81AIcHU13d0L4phvMioYTM51Z2CYZhSz0o1Ak" <- doAuth()[["access"]][["access_token"]]
"1/Q96-IwpDL5KlXWoMiJZjNHBHt7y0g5NGi-eIyVgzwq8" <- google_auth[["access"]][["refresh_token"]]
"1/Q96-IwpDL5KlXWoMiJZjNHBHt7y0g5NGi-eIyVgzwq8" <- doAuth()[["access"]][["refresh_token"]]
body <- statement(select = c("CampaignName", "Clicks"),
report = "KEYWORDS_PERFORMANCE_REPORT",
start = "2018-01-01",
end = "2018-01-03")
data <- getData(clientCustomerId = "397-722-4822",
google_auth = doAuth(),
statement = body,
transformation = T)
data <- getData(clientCustomerId = "397-722-4822",
google_auth = doAuth(),
statement = body,
transformation = T)
View(doAuth())
doAuth()[["credentials"]][["auth.developerToken"]]
doAuth()[["credentials"]][["c.token"]]
"4/AAA0GnRp1c17pSZFNYzU5C4INpeLNSzgkmN_T64v-Ej8BlA09xkCtao" <- doAuth()[["credentials"]][["c.token"]]
body <- statement(select = c("CampaignName", "Clicks"),
report = "KEYWORDS_PERFORMANCE_REPORT",
start = "2018-01-01",
end = "2018-01-03")
data <- getData(clientCustomerId = "397-722-4822",
google_auth = doAuth(),
statement = body,
transformation = T)
View(doAuth())
auth <- doAuth()
View(auth)
auth[["credentials"]][["c.token"]]
"4/AAA0GnRp1c17pSZFNYzU5C4INpeLNSzgkmN_T64v-Ej8BlA09xkCtao" <- auth[["credentials"]][["c.token"]]
body <- statement(select = c("CampaignName", "Clicks"),
report = "KEYWORDS_PERFORMANCE_REPORT",
start = "2018-01-01",
end = "2018-01-03")
data <- getData(clientCustomerId = "397-722-4822",
google_auth = auth,
statement = body,
transformation = T)
View(auth)
auth <- doAuth()
View(auth)
auth[["access"]][["access_token"]]
auth <- doAuth()
"4/AAA0GnRp1c17pSZFNYzU5C4INpeLNSzgkmN_T64v-Ej8BlA09xkCtao" <- auth[["credentials"]][["c.token"]]
"ya29.Glt9BZHNh7B-bm8ASxLoFV8kBBecdsNC8lU2kaBUTPT77Y8zY2bNB1Bh3urbARaKejyKR3XHlfbuUdZpQ0m6m9f81AIcHU13d0L4phvMioYTM51Z2CYZhSz0o1Ak" <- auth[["access"]][["access_token"]]
"1/Q96-IwpDL5KlXWoMiJZjNHBHt7y0g5NGi-eIyVgzwq8" <- auth[["access"]][["refresh_token"]]
body <- statement(select = c("CampaignName", "Clicks"),
report = "KEYWORDS_PERFORMANCE_REPORT",
start = "2018-01-01",
end = "2018-01-03")
data <- getData(clientCustomerId = "397-722-4822",
google_auth = auth,
statement = body,
transformation = T)
View(auth)
loadAdwordsToken()
websites <- read.csv("~/Desktop/websites.csv")
names(websites)
library(dplyr)
names(websites)
us_websites <- read.csv("~/Desktop/websites.csv")
us_websites <- us_websites %>%
select(Co.op, Co.op.Website)
View(us_websites)
us_websites <- read.csv("~/Desktop/websites.csv")
us_websites <- us_websites %>%
select(Co.op, Local, Co.op.Website)
View(us_websites)
us_websites <- read.csv("~/Desktop/websites.csv")
coop_websites <- us_websites %>%
select(Co.op, Local, Co.op.Website) %>%
filter(Co.op.Website != "")
View(coop_websites)
detach("package:RAdwords", unload=TRUE)
library("RAdwords", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
doAuth()
detach("package:RAdwords", unload=TRUE)
install.packages("RAdwords")
doAuth()
library(RAdwords)
doAuth()
"one" + 1
library(shiny); runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
input$file
View(input$file)
reactive(input$file)
is.null(input$file)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
input$file
is.null(reactive({input$file}))
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
file_to_read <- isolate(input$file)
if(is.null(file_to_read)){
return()
}
data1 <- read.csv(input$file[[1, "datapath"]], skip = input$skip, sep = input$deliminator, encoding = input$encode)
data2 <- read.csv(input$file[[2, "datapath"]], skip = input$skip, sep = input$deliminator, encoding = input$encode)
colnames(intersect(data1, data2))
updateSelectizeInput(session = session, inputId = "join_prop", label = "Join by which column(s)?",
choices = colnames(intersect(data1, data2)))
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
?selectizeInput
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
?updateSelectizeInput
selectize.js
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
?observe
?eventReactive
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Random Spinoffs/UpdateSelectizeInput.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
?tryCatch
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
input$file
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
data1
exists(data1)
data1[1]
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
exists(data1)
data1 <<- try(read.csv(input$file[[1, "datapath"]], skip = input$skip, sep = input$deliminator, encoding = input$encode), silent = T)
View(data1)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
View(data1)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
data_set <- left_join(data1, data2, by = input$join_prop)
View(data_set)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
data_set <- left_join(data1, data2, by = input$join_prop)
View(data_set)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
data_set
data_set == "try-error"
data_set[2] == "try-error"
View(data_set)
data_set == ""try-error""
data_set[2]
data_set[1]
data_set[[1]
]
data_set[[1]]
class(data_set)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
View(data_set)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
class(data_set)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
data_set
class(data_set)
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Current Projects/Magic Spreadsheet.R')
runApp('Desktop/Rob Scripts/Random Spinoffs/Radio Conditional.R')
runApp('Desktop/Rob Scripts/Random Spinoffs/Radio Conditional.R')
data <- read.csv("~/Desktop/Workbook 2.csv")
data <- read.csv("~/Desktop/Workbook2.csv")
View(data)
data1 <- read.csv("~/Desktop/Workbook 1.csv")
data1 <- read.csv("~/Desktop/Workbook1.csv")
View(data1)
data2 <- cbind(data, data2)
data2 <- cbind(data, data1)
library(shiny); runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
View(input$api_website)
nrow(as.data.frame(input$api_website))
nrow(as.data.frame((isolate(input$api_website)))
)
1 >1
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
nrow(as.data.frame((isolate(input$api_website)))) == 0
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
data_table <- data_table %>%
select(Source, Date.Range, Sessions)
analytics_2018 <- data_table %>%
filter(str_detect(Date.Range, input$analytics_year)) %>%
filter(Sessions != "")
analytics_2017 <- data_table %>%
filter(!str_detect(Date.Range, input$analytics_year)) %>%
filter(Sessions != "")
analytics_2017 <- try(data_table %>%
filter(!str_detect(Date.Range, input$analytics_year)) %>%
filter(Sessions != ""))
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
data_table <- data_table %>%
select(Source, Date.Range, Sessions)
analytics_2018 <- try(data_table %>%
filter(str_detect(Date.Range, input$analytics_year)) %>%
filter(Sessions != ""))
analytics_2017 <- try(data_table %>%
filter(!str_detect(Date.Range, input$analytics_year)) %>%
filter(Sessions != ""))
analytics_2018
analytics_2018 <- data_table %>%
filter(str_detect(Date.Range, input$analytics_year)) %>%
filter(Sessions != "")
analytics_2018
nrow(analytics_2018)
View(data_table)
first_range <- data_table$Date.Range[1]
first_range
analytics_2018 <- data_table %>%
filter(str_detect(Date.Range, first_range)) %>%
filter(Sessions != "")
as.factor("\.")
class(data_table)
first_range <- data_table[1, "Date.Range"]
first_range
View(first_range)
as_data_frame(first_range)
as.character(first_range)
first_range <- as.character(data_table$Date.Range[1])
first_range
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
input$analytics_file
nrow(analytics_2018) == 0 | nrow(analytics_2017 == 0) | is.null(input$analytics_file)
file_to_read <- isolate(input$analytics_file)
if(is.null(file_to_read)){
return()
}
data_table <- read.csv(file_to_read$datapath, skip = input$analytics_lines, encoding = "UTF-8")
data_table <- try(read.csv(file_to_read$datapath, skip = input$analytics_lines, encoding = "UTF-8"))
data_table <- data_table %>%
select(Source, Date.Range, Sessions)
first_range <- as.character(data_table$Date.Range[1])
analytics_2018 <- try(data_table %>%
filter(str_detect(Date.Range, first_range)) %>%
filter(Sessions != ""))
analytics_2017 <- try(data_table %>%
filter(!str_detect(Date.Range, first_range)) %>%
filter(Sessions != ""))
x <- 0
nrow(x)
x <- NULL
nrow(x)
data_table == "try-error"
data_table
data_table[1] == "try-error"
data_table[2] == "try-error"
class(data_table) == "try-error"
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
input$analytics_file
is.null(nrow(analytics_2018)) | is.null(nrow(analytics_2017)) | is.null(input$analytics_file)
file_to_read <- isolate(input$analytics_file)
if(is.null(file_to_read)){
return()
}
data_table <- try(read.csv(file_to_read$datapath, skip = input$analytics_lines, encoding = "UTF-8"))
class(data_table)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
file_to_read <- isolate(input$analytics_file)
file_to_read
if(is.null(file_to_read)){
return()
}
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
View(combined_table)
class(combined_table$Sessions.y)
class(combined_table$Sessions.x)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
analytics_2017
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
analytics_2017
analytics_2018
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
"Date.Range" %in% colnames(data_table)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
date_ranges
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
library(shiny)
ui <- fluidPage(
radioButtons(inputId = "radio", label = "this is a test", choices = NULL)
)
server <- function(input, output, session) {
}
shinyApp(ui, server))
runApp('Desktop/Rob Scripts/Random Spinoffs/Null Radio.R')
runApp('Desktop/Rob Scripts/Random Spinoffs/Null Radio.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('/Volumes/Front/Adam/Shiny8/scripts')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
lead_export <- rbindlist(lapply(file_to_read$datapath, fread),
use.names = T, fill = T)
View(lead_export)
Q
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
lead_export <- rbindlist(lapply(file_to_read$datapath, fread),
use.names = T, fill = T)
View(lead_export)
is.na(lead_export$SentTo)
sum(lead_export$SentTo)
class(lead_export$SentTo)
x <- lead_export$SentTo
any(is.na(x))
all(is.na(x))
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
lead_export <- rbindlist(lapply(file_to_read$datapath, fread),
use.names = T, fill = T)
ncol(lead_export)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
ncol(lead_export)
View(lead_export)
input$zipcode_lead
setwd
setwd()
getwd()
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
nrow(file_to_read)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
phone_export <- read.csv(isolate(file_to_read$datapath))
phone_export
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
input$dialog_file
file_to_read <- isolate(input$dialog_file)
phone_export <- read.csv(isolate(file_to_read$datapath))
View(phone_export)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
file_to_read
file_to_read$datapath
phone_export <- try(read.csv(isolate(file_to_read$datapath)))
class(phone_export)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
phone_export <- try(read.csv(isolate(file_to_read$datapath)))
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
phone_export <- try(read.csv(isolate(file_to_read$datapath)))
class(phone_export)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
nrow(input$dialog_file)
runApp('Desktop/Rob Scripts/Current Projects/Git/The App Which Shall Not Be Named.R')
